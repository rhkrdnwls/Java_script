console.log(userName);

(1). var userName = 'Max';
(2). let userName = 'Max';

(1): 오류 메세지는 뜨지 않고 userName의 값은 undefined가 된다. 
(2): 오류 메세지가 뜬다. 
-왜 그럴까?

-Hoisting
스크립트를 로드할때 전체 스크립트를 확인해서 함수를 찾은뒤 자동으로 로드하고 등록해서 실제 사용하는 코드 아래에 함수를 작성하도록 하는 것
var로 생성한 변수는 이 변수의 선언을 파일의 시작부분으로 옮겨 온다. 그래서 위 코드는 실제로는 이렇다

var userName;
console.log(userName);
userName = 'Max';

let과 const도 마찬가지이지만 브라우저는 저 변수를 undefined라고 초기화하지 않는다. 일종의 선언이고 초기값을 전혀 할당하지 않기 때문에 오류메세지가 뜬다(let과 const는)  
이에 반해 var는 undefined라고 초기값을 할당한다. 

2. 엄격모
-- 키워드 없이 변수 선언이 가능하다.
userName = 'Max';
라고 하면 보이지 않게 var가 추가되었다. 

시작부분에 'use strict';라고 하면 보다 엄격한 자바 스크립트 작성이 가능한데 비추......

코드의 분석과 실행(parsing & execution)
parsing이 먼저 오는데 이는 브라우저가 자바 스크립트 파일을 읽어서 로딩하는 과정이고,
실행은 실제로 일어나는 단계이다. 
스크립트를 로드하고 실행하는 단계는 인터프리터가 수행한다. 
